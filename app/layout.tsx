"use client";
import Head from 'next/head';
import type { Metadata } from "next";
import "./globals.css";
import { useState } from 'react';
import Menu from "./components/Menu";
import { ClipLoader } from "react-spinners";
import useSWR from 'swr';
import axios from 'axios';

const fetcher = (url: string) => axios.get(url).then(res => res.data);

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
    if (isMenuOpen) {
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "auto";
    }
  };

  const { data: menuData, error: menuError } = useSWR('/api/menu', fetcher);
  const { data: trainerData, error: trainerError } = useSWR('/api/trainers', fetcher);

  const loading = !menuData || !trainerData;

  if (loading) {
    return (
      <html lang="en">
        <body>
          <div className="flex items-center justify-center min-h-screen">
            <ClipLoader size={150} color="#3498db" cssOverride={{ border: '5px solid #3498db', borderRadius: '50%' }} />
          </div>
        </body>
      </html>
    );
  }

  if (menuError || trainerError) {
    return (
      <html lang="en">
        <body>
          <div className="flex items-center justify-center min-h-screen">
            <p>Error loading data</p>
          </div>
        </body>
      </html>
    );
  }

  return (
    <>
      <Head>
        <title>My App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <html lang="en">
        <body className={`dark`}>
          <Menu isOpen={isMenuOpen} toggleMenu={toggleMenu} />
          <div className={isMenuOpen ? 'blur-sm pointer-events-none' : ''}>
            {children}
          </div>
        </body>
      </html>
    </>
  );
}
